figure out how to get shaders to be separate files

desktop app
  options
    electron
      requires some setup
    react native
      is react
    tauri
      not super mature
    just do it in zig
      long setup time and slower development
  desktop app has better integration with OS
    filesystem
      for a 'normal' save/load experience, cloud saving would be nice
    integrate with existing tools

in-app ways to get around needing to save to desktop
  render to png
  vrc model testing/demoing
    animation
    physics
  gamey stuff
    scripting/basic user interaction
    shaders with live inputs
    scene management

don't want to reinvent external tools
  generally feels cheap
  being a web app though it does help if people dont have to save things to disk

---

what if you could draw UVs separately and assign them to faces
  works well for lopoly

load data as shader params ie textures
  kindof the 'asset' idea if that data is stored as part of the object

verts can have multiple UV coords at the same location based on face
  basically for UVs, faces need to be prioritized and you may have many verts
    that have the same position with different uv coords
  drawing needs to be done with index based triangle drawing

'vertex groups'
  used for
    per-vertex material
    vertex groups for selection
    bones/weights
  can be solved by just using separate objects for things
    let users edit multiple objects at once

'modifiers'
  i only ever use mirror
    possibly 'array' (with the origin point)
  why would you need modifiers if theres geometry nodes now

  mirror is a tool setting

for now dont worry about custom shaders

3d editor
  scene data shouldnt be put in a store
    reactivity can be built into the editor, or the component
      editor->ui
        actions done in the editor can trigger signals
        take into account currently selected objects
      ui->editor
        these can be derived setters that set UI state and editor state